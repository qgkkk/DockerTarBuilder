name: Alist_docker_arm64
on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '请填写docker镜像名称 多个用英文逗号分开'
        required: true
        default: 'xhofe/alist:latest'

jobs:
  pull_and_package:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Clean up Docker to free space
      run: |
        docker system prune -a -f
        docker volume prune -f

    - name: Pull Docker Images and Package
      run: |
        mkdir -p output
        images="${{ github.event.inputs.docker_images }}"
        IFS=',' read -r -a image_array <<< "$images"
        for image in "${image_array[@]}"; do
          docker pull "${image}" --platform "linux/arm64"
          filename="$(echo "${image}" | sed 's/[\/:]/-/g')-arm64.tar"
          docker save "${image}" -o "output/${filename}"
        done

    - name: Generate MD5 checksums
      run: |
        for file in output/*.tar; do
          md5sum "$file" > "${file}.md5"
        done 

    - name: Compress each TAR file separately
      run: |
        for file in output/*.tar; do
          tar -czf "${file}.gz" -C output "$(basename "$file")" "$(basename "${file}.md5")"
        done

    - name: Set Release Date
      id: set_date
      run: echo "RELEASE_DATE=$(date -u +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Prepare MD5 content
      id: prepare_md5
      run: |
        echo "MD5_CONTENTS<<EOF" >> $GITHUB_ENV
        for file in output/*.md5; do
          cat "$file" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
        done
        echo "EOF" >> $GITHUB_ENV

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dockerimages
        path: output/*.gz
        retention-days: 1

    - name: Create release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        tag: "release-${{ env.RELEASE_DATE }}-${{ github.run_id }}"
        name: "${{ env.RELEASE_DATE }}"
        body: ${{ env.MD5_CONTENTS }}

    - name: Clean up intermediate files
      run: |
        rm -rf output
